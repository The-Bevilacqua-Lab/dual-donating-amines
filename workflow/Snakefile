import scripts.parse_nrlist

configfile: "config/config.yaml"

# Prepare a list of strings where each string includes the equivalence class name, PDB ID, and chain info for the
# equivalence class members.
eq_class_members = scripts.parse_nrlist.parse_nrlist(config["rep_set_file"], config["all_members"])

rule all:
    input:
        "data/process/combined.csv",
        "data/process/distances.csv"

# rule collect_data:
#     output:
#         data = "data/collect_data/{eq_class_member}.csv"
#     log:
#         stdout = "misc/logs/collect_data/{eq_class_member}.stdout",
#         stderr = "misc/logs/collect_data/{eq_class_member}.stderr"
#     conda:
#         "envs/general.yaml"
#     script:
#         "scripts/collect_data.py"

rule process_data:
    input:
        data = expand("data/collect_data/{eq_class_member}.csv", eq_class_member=eq_class_members)
    output:
        combined = "data/process/combined.csv",
        distances = "data/process/distances.csv"
    log:
        stdout = "misc/logs/process_data/output.stdout",
        stderr = "misc/logs/process_data/error.stderr"
    conda:
        "envs/general.yaml"
    script:
        "scripts/process_data.py"

# rule create_plots:
#     input:
#         combined = "data/process/combined.csv"
#     output:
#         density = "data/plots/density.png",
#         nuc_id = "data/plots/nuc_id.png",
#         acc_id = "data/plots/acc_id.png"
#     script:
#         "scripts/create_plots.R"
